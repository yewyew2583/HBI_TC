<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="TestManually" Id="{d5dec931-0d3f-44e6-a89b-a019a5f5e3a0}" SpecialFunc="None">
    <Declaration><![CDATA[ PROGRAM TestManually
VAR
	tTestCmd 				: TON;
	bTIUSlide				: BOOL;
	bSlideOut				: BOOL;
	bDrawer					: BOOL;
	bUpDown					: BOOL;
	bAPAirValve				: BOOL;
	bTesterAirValve			: BOOL;
	bOnOff					: BOOL;
	AP240ACPwr				: BOOL;
	AP240ACPwrPara			: INT;
	bEnableModule			: BOOL;
	bDisableModule			: BOOL;
	bTCCSessionRequest 		: BOOL;
	bTCCSessionStartEnd 	: BOOL;
	bDoorClose				: BOOL;
	bDoorOpen				: BOOL;
	bDPSPower				: BOOL;
	iDPSPowerPara			: INT;
	bLvlAlarmReset			: BOOL;
	bColAlarmReset			: BOOL;
	bCancel					: BOOL;
	bTIUSlideOutRetry		: BOOL;
	bTIUSlideOutCancel		: BOOL;
	bActivateRecipe			: BOOL;
	bValidateRecipe			: BOOL;
	bSetLogFileVerbosity	: BOOL;
	bInitialise				: BOOL;
	bResume					: BOOL;
	
	ClearTCSEvent 		: TON;
	iClearCount   		: INT 		:= 0;
	iTotalClear   		: INT 		:= 20;
	bAutoClearEvent 	: BOOL 		:= FALSE;
	
	iAlarmCodes			: ARRAY[1..NO_OF_LEVEL] OF INT 	:= [1,1,1,1,1,1];
	iAlarmCode			: INT		:= 1;
	iBlinkRate			: INT		:= 1000;
	iSubModule			: INT 		:= 1;
	TestLogName			: STRING	:= '';
	TestCommandID 		: E_TaskName;
	TestModuleID 		: E_ModuleID:=E_ModuleID.NA;
	bTestCommand		: BOOL;	
	TestInteger			: ARRAY[1..10] OF DINT;
	TestString 			: STRING;
	TestBool 			: BOOL;
	iBtnNo				: INT		:= 5;
	i					: INT;
	
	bInitialiseAll 		: BOOL;
	bAlmResetAll 		: BOOL;
	
	tim					: TON;
	miniState			: INT;
	solenoidNumber		: ARRAY [1..10] OF DINT := [1,2,3];
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//<HMICommandTest>
	CASE iHMICbCmdSelection OF
		E_Cmd.EnableTester:		 	(*TestBool:=FALSE;*) 	TestInteger[1]:=iAlarmCode; TestString:='';		TestCommandID:=E_TaskName.EnableModule;			TestModuleID:=E_ModuleID.CELL_LA101_TESTER; TestLogName:=CONCAT('EnableModule' ,CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.DisableTester:     	(*TestBool:=FALSE;*) 	TestInteger[1]:=iAlarmCode; TestString:='';		TestCommandID:=E_TaskName.DisableModule;		TestModuleID:=E_ModuleID.CELL_LA101_TESTER; TestLogName:=CONCAT('DisableModule',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
	                             
		E_Cmd.EnableTCU:		 	(*TestBool:=FALSE;*) 	TestInteger[1]:=iAlarmCode; TestString:='';		TestCommandID:=E_TaskName.EnableModule;			TestModuleID:=E_ModuleID.CELL_LA101_AP; TestLogName:=CONCAT('EnableTCU' ,CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.DisableTCU:		 	(*TestBool:=FALSE;*) 	TestInteger[1]:=iAlarmCode; TestString:='';		TestCommandID:=E_TaskName.DisableModule;		TestModuleID:=E_ModuleID.CELL_LA101_AP; TestLogName:=CONCAT('DisableTCU',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
	                             
		E_Cmd.EnableTII:		 	(*TestBool:=FALSE;*) 	TestInteger[1]:=iAlarmCode; TestString:='';		TestCommandID:=E_TaskName.EnableModule;			TestModuleID:=E_ModuleID.CELL_LA101_TIERII; TestLogName:=CONCAT('EnableTII' ,CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.DisableTII:		 	(*TestBool:=FALSE;*) 	TestInteger[1]:=iAlarmCode; TestString:='';		TestCommandID:=E_TaskName.DisableModule;		TestModuleID:=E_ModuleID.CELL_LA101_TIERII; TestLogName:=CONCAT('DisableTII',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));

		E_Cmd.INITIALISE:			TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';				TestCommandID:=E_TaskName.Initialize;				TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('Initialize',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.AlarmReset:		 	(*TestBool:=FALSE;*)	TestInteger[1]:=iAlarmCode; TestString:='';		TestCommandID:=E_TaskName.AlarmReset;				TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('AlarmReset',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.ColumnAlarmReset:	 	(*TestBool:=FALSE;*) 	TestInteger[1]:=iAlarmCode; TestString:='';		TestCommandID:=E_TaskName.AlarmReset;				TestModuleID:=COLUMN_NAME;										 //TestLogName:=CONCAT('Initialize',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUSlideIn:		 	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';				TestCommandID:=E_TaskName.TIUSlideOut;				TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TIUSlideIN',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUSlideOut:		 	TestBool:=TRUE;			TestInteger[1]:=0; TestString:='';				TestCommandID:=E_TaskName.TIUSlideOut;				TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TIUSlideOut',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUDrawerUp:		 	TestBool:=TRUE; 		TestInteger[1]:=0; TestString:='';				TestCommandID:=E_TaskName.DrawerUp;					TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('DrawerUp',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUDrawerDown:	 	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';            	TestCommandID:=E_TaskName.DrawerUp;					TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('DrawerDOWN',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUSlideOutRetry:  	(*TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';*)        	TestCommandID:=E_TaskName.TIUSlideOutRetry;			TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TIUSlideOutRetry',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUSlideOutCancel: 	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';            	TestCommandID:=E_TaskName.TIUSlideOutCancel;		TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TIUSlideOutCancel',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.DPSPowerON:        	TestBool:=FALSE; 		TestInteger[1]:=1; TestString:='';			 	TestCommandID:=E_TaskName.DPSPower;             	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('DPSPowerON',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.DPSPowerOFF:       	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';            	TestCommandID:=E_TaskName.DPSPower;             	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('DPSPowerOFF',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.DPSPowerAuto:		 	TestBool:=FALSE; 		TestInteger[1]:=2; TestString:='';            	TestCommandID:=E_TaskName.DPSPower;             	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('DPSPowerAUTO',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.AP240ACPowerON:    	TestBool:=FALSE; 		TestInteger[1]:=1; TestString:='';            	TestCommandID:=E_TaskName.AP240ACPOWER;         	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('AP240ACPwrON',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.AP240ACPowerOFF:   	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';			 	TestCommandID:=E_TaskName.AP240ACPOWER;         	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('AP240ACPwrOFF',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.APAirValveON:      	TestBool:=TRUE; 		TestInteger[1]:=0; TestString:='';             	TestCommandID:=E_TaskName.APAirValve;           	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('APAirValveON',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.APAirValveOFF:     	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';            	TestCommandID:=E_TaskName.APAirValve;           	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('APAirValveOFF',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TstAirValveON:	 	TestBool:=TRUE; 		TestInteger[1]:=0; TestString:='';             	TestCommandID:=E_TaskName.TesterAirValve;       	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TesterAirValveON',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TstAirValveOFF:     	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';			 	TestCommandID:=E_TaskName.TesterAirValve;	    	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TesterAirValveOFF',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));                 
		E_Cmd.CellDoorOpen:     	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';            	TestCommandID:=E_TaskName.DoorOpen;        	 		TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('CellDoorOpen',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.CellDoorClose:	 	TestBool:=TRUE; 		TestInteger[1]:=0; TestString:='';             	TestCommandID:=E_TaskName.DoorClose;       			TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('CellDoorClose',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.CancelBuffer:     	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';			 	TestCommandID:=E_TaskName.Cancel;	    			TestModuleID:=E_ModuleID.NA; 								TestLogName:=CONCAT('CancelBuffer',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));                 
		E_Cmd.TIUSocketAirOn_1:     TestBool:=TRUE; 		TestInteger[1]:=1; TestString:='';             	TestCommandID:=E_TaskName.TIUSocketCoolingAir;		TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TIUSocketCoolingAir_1',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUSocketAirOn_2:     TestBool:=TRUE; 		TestInteger[1]:=2; TestString:='';             	TestCommandID:=E_TaskName.TIUSocketCoolingAir;		TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TIUSocketCoolingAir_2',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUSocketAirOff_1:	TestBool:=FALSE; 		TestInteger[1]:=1; TestString:='';             	TestCommandID:=E_TaskName.TIUSocketCoolingAir;		TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TIUSocketCoolingAir_1',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.TIUSocketAirOff_2:	TestBool:=FALSE; 		TestInteger[1]:=2; TestString:='';             	TestCommandID:=E_TaskName.TIUSocketCoolingAir;		TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('TIUSocketCoolingAir_2',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));		
		E_Cmd.SetLEDON:     		TestBool:=TRUE; 		TestInteger[2]:=0;						TestInteger[1]:=iBtnNo; TestString:='';	TestCommandID:=E_TaskName.SetBlinkRate;	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; TestLogName:=CONCAT(CONCAT('SetLEDON_Btn_0',INT_TO_STRING(iBtnNo)),CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));                 
		E_Cmd.SetLEDOFF:     		TestBool:=FALSE; 		TestInteger[2]:=iBlinkRate; 			TestInteger[1]:=iBtnNo; TestString:='';	TestCommandID:=E_TaskName.SetBlinkRate;	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; TestLogName:=CONCAT(CONCAT('SetLEDON_Btn_0',INT_TO_STRING(iBtnNo)),CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));                 
		E_Cmd.SetLEDBlink:     		TestBool:=TRUE; 		TestInteger[2]:=iBlinkRate; 			TestInteger[1]:=iBtnNo; TestString:='';	TestCommandID:=E_TaskName.SetBlinkRate;	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; TestLogName:=CONCAT(CONCAT('SetLEDBlink_Btn_0',INT_TO_STRING(iBtnNo)),CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));                 
		E_Cmd.DCCellFrontDoorOpen:  TestBool:=FALSE; 		TestInteger[1]:=0; TestString:=''; 				TestCommandID:=E_TaskName.DoorOpen;  				TestModuleID:=LA_FRONT_DOOR_MODULE_ID[iHMICbLevelSelection]; TestLogName:=CONCAT('CellFrontDoorOpen',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));                
		E_Cmd.DCCellFrontDoorClose: TestBool:=TRUE; 		TestInteger[1]:=0; TestString:='';  			TestCommandID:=E_TaskName.DoorClose; 				TestModuleID:=LA_FRONT_DOOR_MODULE_ID[iHMICbLevelSelection]; TestLogName:=CONCAT('CellFrontDoorClose',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));     
   		E_Cmd.SetSolenoidValvesON:	TestBool:=TRUE;			TestInteger	:=solenoidNumber; 			TestString:='';				TestCommandID:=E_TaskName.SetSolenoidValves;  		TestModuleID:=LB_LEVEL_MODULE_ID[iHMICbLevelSelection]; 	TestLogName:=CONCAT('SetSolenoidValveON',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.SetSolenoidValvesOFF:	TestBool:=FALSE;		TestInteger	:=solenoidNumber;			TestString:='';				TestCommandID:=E_TaskName.SetSolenoidValves;  		TestModuleID:=LB_LEVEL_MODULE_ID[iHMICbLevelSelection]; 	TestLogName:=CONCAT('SetSolenoidValveOFF',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.Secondary24VPowerON:	TestBool:=FALSE; 		TestInteger[1]:=1; TestString:='';            	TestCommandID:=E_TaskName.Secondary24VPower;         	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('Secondary24VPowerON',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));
		E_Cmd.Secondary24VPowerOFF:	TestBool:=FALSE; 		TestInteger[1]:=0; TestString:='';            	TestCommandID:=E_TaskName.Secondary24VPower;         	TestModuleID:=LevelModuleID[iHMICbLevelSelection]; 			TestLogName:=CONCAT('Secondary24VPowerOFF',CONCAT('Level_',INT_TO_STRING(iHMICbLevelSelection)));

END_CASE                  
//</HMICommandTest>        

//


IF bInitialiseAll THEN
	FOR i:=1 TO CycleTest.iNoOfLevel DO
		arrTACommands.arrTACommands[i].sLogName := CONCAT(CONCAT('Initialise Level[',INT_TO_STRING(i)),']');
		arrTACommands.arrTACommands[i].eTaskName := E_TaskName.Initialize;
		arrTACommands.arrTACommands[i].eModuleID := LevelModuleID[i];
	END_FOR
	arrTCSCommandReady:= FALSE;
	iClearCount := iTotalClear;
	bInitialiseAll := FALSE;
END_IF
	
IF bAlmResetAll THEN
	FOR i:=1 TO NO_OF_LEVEL DO
		arrTACommands.arrTACommands[i].sLogName := CONCAT(CONCAT('Alarm Reset Level[',INT_TO_STRING(i)),']');
		arrTACommands.arrTACommands[i].eTaskName := E_TaskName.AlarmReset;
		arrTACommands.arrTACommands[i].eModuleID := LevelModuleID[i];
		arrTACommands.arrTACommands[1].iParam[1] := iAlarmCodes[i]; //iSubModule;
	END_FOR
	arrTCSCommandReady:= FALSE;
	iClearCount := iTotalClear;
	bAlmResetAll := FALSE;
END_IF
	
//<ManualTest>
	IF bTestCommand   THEN
		arrTACommands.arrTACommands[1].sLogName 	:= TestLogName;
		arrTACommands.arrTACommands[1].eTaskName 	:= TestCommandID;
		arrTACommands.arrTACommands[1].eModuleID 	:= TestModuleID; 
		arrTACommands.arrTACommands[1].iParam[1] 	:= TestInteger[1];
		arrTACommands.arrTACommands[1].iParam[2] 	:= TestInteger[2];
		arrTACommands.arrTACommands[1].iParam		:= TestInteger;
		arrTACommands.arrTACommands[1].sParam[1] 	:= TestString;
		arrTACommands.arrTACommands[1].bParam[1] 	:= TestBool;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bTestCommand := FALSE;
	
	ELSIF bInitialise THEN
		arrTACommands.arrTACommands[1].sLogName := 'Initialise_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.Initialize;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bInitialise := FALSE;
	
	ELSIF bActivateRecipe THEN
		arrTACommands.arrTACommands[1].sLogName := 'ActivateRecipe_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.ActivateRecipe;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bActivateRecipe := FALSE;
		
	ELSIF bValidateRecipe THEN
		arrTACommands.arrTACommands[1].sLogName := 'ValidateRecipe_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.ValidateRecipe;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bValidateRecipe := FALSE;
	ELSIF bSetLogFileVerbosity THEN
		arrTACommands.arrTACommands[1].sLogName := 'SetLogFileVerbosity_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.SetLogFileVerbosity;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bSetLogFileVerbosity := FALSE;	
	ELSIF bTesterAirValve THEN
		arrTACommands.arrTACommands[1].sLogName := 'TesterAirValve_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.TesterAirValve;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		arrTACommands.arrTACommands[1].bParam[1] := bOnOff;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bTesterAirValve := FALSE;
	ELSIF bAPAirValve THEN
		arrTACommands.arrTACommands[1].sLogName := 'APAirValve_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.APAirValve;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		arrTACommands.arrTACommands[1].bParam[1] := bOnOff;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bAPAirValve := FALSE;
		
	ELSIF bEnableModule THEN
		arrTACommands.arrTACommands[1].sLogName := 'EnableModule_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.EnableModule;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bEnableModule := FALSE;
		
	ELSIF bDisableModule THEN
		arrTACommands.arrTACommands[1].sLogName := 'DisableModule_1_TESTER_LA0';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.DisableModule;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bDisableModule := FALSE;
	
	ELSIF bTCCSessionRequest THEN
		arrTACommands.arrTACommands[1].sLogName := 'TCCSessionRequest_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.TCCSessionRequest;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		arrTACommands.arrTACommands[1].bParam[1] := bTCCSessionStartEnd;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bTCCSessionRequest := FALSE;
		
	ELSIF bDPSPower THEN
		arrTACommands.arrTACommands[1].sLogName := 'bDPSPower_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.DPSPower;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		arrTACommands.arrTACommands[1].iParam[1] := iDPSPowerPara;//(0,1,2)
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bDPSPower := FALSE;
	ELSIF AP240ACPwr THEN
		arrTACommands.arrTACommands[1].sLogName := 'AP240ACPower_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.AP240ACPOWER;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		arrTACommands.arrTACommands[1].iParam[1] := AP240ACPwrPara;//(0,1,2)
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		AP240ACPwr := FALSE;
		
	ELSIF bDoorClose THEN
		arrTACommands.arrTACommands[1].sLogName := 'DoorCloseRequest_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.DoorClose;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bDoorClose := FALSE;
		
	ELSIF bDoorOpen THEN
		arrTACommands.arrTACommands[1].sLogName := 'DoorOpenRequest_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.DoorOpen;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bDoorOpen := FALSE;
	ELSIF bDrawer THEN
		arrTACommands.arrTACommands[1].sLogName := 'DrawerUp_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.DrawerUp;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		arrTACommands.arrTACommands[1].bParam[1] := bUpDown;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bDrawer := FALSE;	
	ELSIF bTIUSlide THEN
		arrTACommands.arrTACommands[1].sLogName := 'TIUSlideOut_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.TIUSlideOut;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.TBOT_R_RFID;
		arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bTIUSlide := FALSE;
	ELSIF bTIUSlideOutRetry THEN
		arrTACommands.arrTACommands[1].sLogName := 'TIUSlideOutRetry_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.TIUSlideOutRetry;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bTIUSlideOutRetry := FALSE;
	ELSIF bTIUSlideOutCancel THEN
		arrTACommands.arrTACommands[1].sLogName := 'TIUSlideOutCancel_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.TIUSlideOutCancel;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bTIUSlideOutCancel := FALSE;
		
	ELSIF bCancel THEN
		arrTACommands.arrTACommands[1].sLogName := 'Cancel_NA [Buffer Clear]';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.Cancel;
		arrTACommands.arrTACommands[1].eModuleID := E_ModuleID.NA;
		arrTACommands.arrTACommands[1].bParam[1] := 1;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bCancel := FALSE;
	
	ELSIF bLvlAlarmReset THEN
		arrTACommands.arrTACommands[1].sLogName := 'LevelAlarmReset';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.AlarmReset;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		arrTACommands.arrTACommands[1].iParam[1] := iAlarmCode; //iSubModule;
		//arrTACommands.arrTACommands[1].iParam[2] := iAlarmCode;
		//arrTACommands.arrTACommands[1].iParam := F_ArrayInt(iParam:= arrTACommands.arrTACommands[1].iParam, iParam1 := iAlarmCode);
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bLvlAlarmReset := FALSE;
		
	ELSIF bColAlarmReset THEN
		arrTACommands.arrTACommands[1].sLogName := TestLogName;
		arrTACommands.arrTACommands[1].eTaskName := TestCommandID;
		arrTACommands.arrTACommands[1].eModuleID := COLUMN_NAME;
		arrTACommands.arrTACommands[1].iParam[1] := iAlarmCode; //iSubModule;
		//arrTACommands.arrTACommands[1].iParam[2] := iAlarmCode;
		//arrTACommands.arrTACommands[1].iParam := F_ArrayInt(iParam:= arrTACommands.arrTACommands[1].iParam, iParam1 := iAlarmCode);
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bColAlarmReset := FALSE;
	
	ELSIF bResume THEN
		arrTACommands.arrTACommands[1].sLogName := 'Resume_1_TESTER_LA01';
		arrTACommands.arrTACommands[1].eTaskName := E_TaskName.Resume;
		arrTACommands.arrTACommands[1].eModuleID := TestModuleID;//E_ModuleID.TESTER_LA01;
		//arrTACommands.arrTACommands[1].bParam[1] := bSlideOut;
		arrTCSCommandReady:= FALSE;
		iClearCount := iTotalClear;
		bResume := FALSE;
	(**)	
	END_IF
//</ManualTest>	




IF bAutoClearEvent THEN
	iClearCount := iTotalClear;
END_IF

//Ensure the arrTCSEventTriggered[] are fully cleared
ClearTCSEvent(IN:=(iClearCount > 0), PT:=T#100MS);
IF ClearTCSEvent.Q THEN
	ClearTCSEvent(IN:=FALSE);
	iClearCount := iClearCount - 1;
	arrTCSEventTriggered:= FALSE;
	
END_IF
	
tTestCmd(IN:=FALSE, PT:=T#5S);
IF tTestCmd.Q THEN
	tTestCmd(IN:=FALSE);
	bTIUSlide :=TRUE;
END_IF
                ]]></ST>
    </Implementation>
    <Method Name="TestCommand" Id="{4a3af204-987f-4ecc-90f8-e7e938ed20d8}">
      <Declaration><![CDATA[METHOD TestCommand : Bool
VAR_INPUT
	sLogName:STRING;
	eTaskName:E_TaskName;
	eModuleID:E_ModuleID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="TestManually">
      <LineId Id="1796" Count="1" />
      <LineId Id="2282" Count="1" />
      <LineId Id="2286" Count="0" />
      <LineId Id="2288" Count="1" />
      <LineId Id="2287" Count="0" />
      <LineId Id="2291" Count="1" />
      <LineId Id="2285" Count="0" />
      <LineId Id="1821" Count="0" />
      <LineId Id="1798" Count="16" />
      <LineId Id="1883" Count="2" />
      <LineId Id="2073" Count="1" />
      <LineId Id="2223" Count="1" />
      <LineId Id="2222" Count="0" />
      <LineId Id="1946" Count="1" />
      <LineId Id="2008" Count="0" />
      <LineId Id="2011" Count="0" />
      <LineId Id="2350" Count="1" />
      <LineId Id="2469" Count="0" />
      <LineId Id="2471" Count="1" />
      <LineId Id="2470" Count="0" />
      <LineId Id="1819" Count="0" />
      <LineId Id="2161" Count="0" />
      <LineId Id="2136" Count="0" />
      <LineId Id="2164" Count="0" />
      <LineId Id="2163" Count="0" />
      <LineId Id="1573" Count="0" />
      <LineId Id="1575" Count="2" />
      <LineId Id="1580" Count="0" />
      <LineId Id="1583" Count="1" />
      <LineId Id="1637" Count="0" />
      <LineId Id="1585" Count="0" />
      <LineId Id="1572" Count="0" />
      <LineId Id="1706" Count="0" />
      <LineId Id="1697" Count="4" />
      <LineId Id="1707" Count="0" />
      <LineId Id="1702" Count="3" />
      <LineId Id="1696" Count="0" />
      <LineId Id="1694" Count="0" />
      <LineId Id="2160" Count="0" />
      <LineId Id="2150" Count="5" />
      <LineId Id="2411" Count="0" />
      <LineId Id="2156" Count="3" />
      <LineId Id="1695" Count="0" />
      <LineId Id="1693" Count="0" />
      <LineId Id="1065" Count="5" />
      <LineId Id="1072" Count="0" />
      <LineId Id="1074" Count="0" />
      <LineId Id="1265" Count="0" />
      <LineId Id="1282" Count="0" />
      <LineId Id="1291" Count="7" />
      <LineId Id="1286" Count="0" />
      <LineId Id="1300" Count="0" />
      <LineId Id="1302" Count="7" />
      <LineId Id="1301" Count="0" />
      <LineId Id="1274" Count="0" />
      <LineId Id="1312" Count="6" />
      <LineId Id="1311" Count="0" />
      <LineId Id="1380" Count="7" />
      <LineId Id="1378" Count="0" />
      <LineId Id="1398" Count="7" />
      <LineId Id="1397" Count="0" />
      <LineId Id="1379" Count="0" />
      <LineId Id="1090" Count="5" />
      <LineId Id="1097" Count="9" />
      <LineId Id="1108" Count="8" />
      <LineId Id="1118" Count="9" />
      <LineId Id="1129" Count="2" />
      <LineId Id="1389" Count="7" />
      <LineId Id="1388" Count="0" />
      <LineId Id="1132" Count="6" />
      <LineId Id="1140" Count="9" />
      <LineId Id="1151" Count="2" />
      <LineId Id="1482" Count="7" />
      <LineId Id="1481" Count="0" />
      <LineId Id="1463" Count="8" />
      <LineId Id="1156" Count="4" />
      <LineId Id="1162" Count="0" />
      <LineId Id="1164" Count="1" />
      <LineId Id="1240" Count="4" />
      <LineId Id="1246" Count="0" />
      <LineId Id="1248" Count="0" />
      <LineId Id="1238" Count="0" />
      <LineId Id="1252" Count="0" />
      <LineId Id="1167" Count="4" />
      <LineId Id="1173" Count="0" />
      <LineId Id="1175" Count="9" />
      <LineId Id="1186" Count="0" />
      <LineId Id="1188" Count="9" />
      <LineId Id="1199" Count="0" />
      <LineId Id="1201" Count="1" />
      <LineId Id="1455" Count="6" />
      <LineId Id="1558" Count="0" />
      <LineId Id="1278" Count="0" />
      <LineId Id="1275" Count="0" />
      <LineId Id="2135" Count="0" />
      <LineId Id="1557" Count="0" />
      <LineId Id="1215" Count="1" />
      <LineId Id="2133" Count="0" />
      <LineId Id="2132" Count="0" />
      <LineId Id="1217" Count="17" />
      <LineId Id="1791" Count="0" />
    </LineIds>
    <LineIds Name="TestManually.TestCommand">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>