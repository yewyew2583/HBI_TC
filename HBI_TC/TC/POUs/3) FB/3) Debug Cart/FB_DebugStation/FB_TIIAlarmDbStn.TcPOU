<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_TIIAlarmDbStn" Id="{1f1c0a9a-a15d-4901-bcd2-0649d00aa61a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TIIAlarmDbStn
VAR_INPUT
	vIO 					: ST_DebugStation_VIO;
	NoOfTIIAlm 				: INT	:= NO_OF_TII_SENSOR;
	iLevel 					: INT	:= 1;
END_VAR
VAR_OUTPUT
	isTIIError				: BOOL;
	TIIAlarmLED				: BOOL;
	TIIAlarmEPT				: BOOL;
END_VAR
VAR
	DIFU					: R_TRIG;
	tim 					: TON;
	delay 					: FB_Delay;
	tPOn					: BOOL;	//testerPowerOutoutOn after Delay
	dPOn					: BOOL; //dpsPwrbit after Delay
	bitNo					: INT;
	alarmReset				: BOOL;
	
	ArrAlmBitBefDelay 		: ARRAY[1..NO_OF_TII_SENSOR] OF BOOL;
	ArrAlmBitAftDelay 		: ARRAY[1..NO_OF_TII_SENSOR] OF BOOL;
	ArrAlarmKeepBit			: ARRAY[1..NO_OF_TII_SENSOR] OF BOOL;
	ArrDelayAlarm 			: ARRAY[1..NO_OF_TII_SENSOR] OF FB_AlarmDelay;
	Arr_ms 					: ARRAY[1..NO_OF_TII_SENSOR] OF INT;
	bTIIByPassArray			: ARRAY[1..NO_OF_TII_SENSOR] OF BOOL;
	i						: INT;
	bTest 					: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//<HMI_TII_Test>

	IF bHMITIIBypass THEN
		bTIIByPassArray:= stHMITIIByPassArray[iLevel].bHMITIIByPassArray;
		//FOR i:=1 TO NoOfTIIAlm DO
		//	bTIIByPassArray[i]:= NOT stHMITIIByPassArray[iLevel].bHMITIIByPassArray[i];
		//END_FOR
	ELSE
		FOR i:=1 TO NoOfTIIAlm DO
			//bTIIByPassArray[i]:=bEnableTIIAlarm;
			bTIIByPassArray[i]:=TC_ModuleState[iLevel].TCSite[1].TIERII = E_State.eEnabled;
		END_FOR
	END_IF
//</HMI_TII_Test>
//IF bTest THEN
AlarmUpdate(bENs:=bTIIByPassArray);
//END_IF
 
 ]]></ST>
    </Implementation>
    <Method Name="AlarmUpdate" Id="{df4f023a-29b0-4ee7-baee-77dc81ad8f78}">
      <Declaration><![CDATA[METHOD AlarmUpdate : BOOL
VAR
	i						: INT;
	j						: INT;
	_bError					: BOOL;
	iSysAlarmID 			: INT;
	e						: E_TIIAlarm;
	bTstOnCmd 				: BOOL;
	bChkTstOn 				: BOOL;
	
	bAPOnCmd				: BOOL;
	bChkAPOn 				: BOOL;
	//Condition
	lRt:BOOL;
	lEt:BOOL;;
END_VAR

VAR_INPUT
	bENs :ARRAY[1..NO_OF_TII_SENSOR] OF BOOL;
END_VAR

VAR_IN_OUT
	//ArrAlarmKeepBit:ST_AlarmTags;
END_VAR
VAR_OUTPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iLevel=0 THEN
	RETURN;
END_IF

FOR i:=1 TO NoOfTIIAlm DO	
	CASE i OF
        E_TIIAlarm.ipAPPowerOn: 
			e															:= E_TIIAlarm.ipAPPowerOn; 
			ArrAlmBitBefDelay[E_TIIAlarm.ipAPPowerOn]					:= (NOT vIO.ipDBStnAPPowerOn) AND VIO.ipDBStnAPPresentSensor AND GVL_DUT_DC_AP240ACPower.Failed AND bENs[2];
			Arr_ms[e] 													:= 500;  (*TIIAlmText[e]:='AP_PowerOn'*); 
			
	    E_TIIAlarm.ipAPReady: 
			e															:= E_TIIAlarm.ipAPReady; 
			ArrAlmBitBefDelay[E_TIIAlarm.ipAPReady]						:= (NOT	vIO.ipDBStnAPReady)	AND vIO.ipDBStnAPPresentSensor AND bENs[3]; 	
			Arr_ms[e] 													:= 500;  (*TIIAlmText[e]:='AP_Ready' 		    	*);     
                   
	    E_TIIAlarm.ipCellGroundFault:
			e															:= E_TIIAlarm.ipCellGroundFault; 
			ArrAlmBitBefDelay[E_TIIAlarm.ipCellGroundFault]				:= vIO.ipDBStnCellGroundFault AND bENs[8] ; 
			Arr_ms[e] 													:= 500;  //TIIAlmText[e]:='CellGroundFault'  		;    

		E_TIIAlarm.ipCellFluidLeakage1: 
			e															:= E_TIIAlarm.ipCellFluidLeakage1; 
			ArrAlmBitBefDelay[E_TIIAlarm.ipCellFluidLeakage1]			:= vIO.ipDBStnCellFluidLeakage1 (*AND bENs[6]*); 			
			Arr_ms[e] 													:= 500;  (*TIIAlmText[e]:='CellFluidLeakage1' 	*);   
			
	    E_TIIAlarm.ipCellFluidLeakage2: 
			e															:= E_TIIAlarm.ipCellFluidLeakage2; 
			ArrAlmBitBefDelay[E_TIIAlarm.ipCellFluidLeakage2]			:= vIO.ipDBStnCellFluidLeakage2 (*AND bENs[7]*) ;	
			Arr_ms[e] 													:= 500;  (*TIIAlmText[e]:='CellFluidLeakage2'*);     
	END_CASE

	//Delay Library Alm Bit
	ArrDelayAlarm[i](	alarmState			:= ArrAlmBitBefDelay[i],
						triggerAlarmState	=> ArrAlmBitAftDelay[i],
						alarmResetTimer		:= alarmReset,
						msec				:= Arr_ms[i]);	//DelayAlmBit
	

	IF ArrAlmBitAftDelay[i] THEN					//realtime IO update array
		//stAlmMod.Level[iLevel].AlarmID[i]:=TRUE;
		ALMTC.Level[iLevel].AlarmID[i]:=TRUE;
	ELSE
		//TIIAlmText[i]:='';  
	END_IF		
		//_bError := _bError OR stAlmMod.Level[iLevel].AlarmID[i];
		_bError := _bError OR ALMTC.Level[iLevel].AlarmID[i];
	
END_FOR

TIIAlarmLED															:=		ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipAPPowerOn 		   	   		]   OR 
		    																ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipAPReady		       	   	]   OR
																			ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipCellFluidLeakage1		   	]   OR
																			ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipCellFluidLeakage2		   	]   OR
																			ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipCellGroundFault 	   		]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.e6BarLowOFAAirPressureAlarm			]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eCriticalCondensationAlarm			]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eSystemPCWLeakageAlarm				]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eSystemPCWLeakage2Alarm				]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eSystemPCWSupplyLeakageAlarm			]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eSystemPCWReturnLeakageAlarm			];
																			
TIIAlarmEPT															:=		ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipAPPowerOn 		   	   		]   OR 
		    																ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipAPReady		       	   	]   OR
																			ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipCellFluidLeakage1		   	]   OR
																			ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipCellFluidLeakage2		   	]   OR
																			ALMTC.Level[iLevel].AlarmID[E_TIIAlarm.ipCellGroundFault 	   		]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.e6BarLowOFAAirPressureAlarm			]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eCriticalCondensationAlarm			]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eSystemPCWLeakageAlarm				]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eSystemPCWLeakage2Alarm				]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eSystemPCWSupplyLeakageAlarm			]	OR
																			ALM_DCCOL.AlarmID[E_DCFACAlarm.eSystemPCWReturnLeakageAlarm			];

																			
																			
																			
																			
																			
																			]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_ErrClear" Id="{400cb5c4-2dc6-4fab-b5e3-d1a6a6655309}">
      <Declaration><![CDATA[PROPERTY P_ErrClear : BOOL]]></Declaration>
      <Get Name="Get" Id="{e7f3b0b1-d5ff-4651-92e7-f2b82d74132a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{ecaf4f2d-d579-4242-ac6c-78cd914d372d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[alarmReset	:= P_ErrClear;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="FB_TIIAlarmDbStn">
      <LineId Id="124" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="130" Count="1" />
      <LineId Id="236" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="132" Count="1" />
      <LineId Id="118" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="FB_TIIAlarmDbStn.AlarmUpdate">
      <LineId Id="140" Count="1" />
      <LineId Id="475" Count="0" />
      <LineId Id="576" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="695" Count="7" />
      <LineId Id="312" Count="1" />
      <LineId Id="157" Count="0" />
      <LineId Id="703" Count="2" />
      <LineId Id="779" Count="8" />
      <LineId Id="778" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="177" Count="2" />
      <LineId Id="635" Count="0" />
      <LineId Id="663" Count="0" />
      <LineId Id="636" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="182" Count="1" />
      <LineId Id="232" Count="0" />
      <LineId Id="390" Count="0" />
      <LineId Id="282" Count="1" />
      <LineId Id="187" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="391" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="760" Count="1" />
      <LineId Id="766" Count="2" />
      <LineId Id="841" Count="0" />
      <LineId Id="846" Count="0" />
      <LineId Id="842" Count="3" />
      <LineId Id="733" Count="0" />
      <LineId Id="814" Count="0" />
      <LineId Id="816" Count="3" />
      <LineId Id="815" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="836" Count="4" />
      <LineId Id="831" Count="0" />
      <LineId Id="829" Count="0" />
      <LineId Id="832" Count="3" />
      <LineId Id="830" Count="0" />
    </LineIds>
    <LineIds Name="FB_TIIAlarmDbStn.P_ErrClear.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_TIIAlarmDbStn.P_ErrClear.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>